package com.megacreative.commands;

import com.megacreative.MegaCreative;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

public class DebugCommand implements CommandExecutor {
    
    private final MegaCreative plugin;
    
    public DebugCommand(MegaCreative plugin) {
        this.plugin = plugin;
    }
    
    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("¬ßc–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º!");
            return true;
        }
        
        Player player = (Player) sender;
        
        if (args.length == 0) {
            showHelp(player);
            return true;
        }
        
        String subCommand = args[0].toLowerCase();
        
        switch (subCommand) {
            case "on":
            case "enable":
                plugin.getScriptDebugger().toggleDebug(player);
                break;
                
            case "off":
            case "disable":
                plugin.getScriptDebugger().toggleDebug(player);
                break;
                
            case "toggle":
                plugin.getScriptDebugger().toggleDebug(player);
                break;
                
            case "stats":
            case "statistics":
                plugin.getScriptDebugger().showDebugStats(player);
                break;
                
            case "step":
                plugin.getScriptDebugger().stepExecution(player);
                break;
                
            case "stepmode":
                plugin.getScriptDebugger().toggleStepExecution(player);
                break;
                
            case "vars":
            case "variables":
                showVariables(player);
                break;
                
            case "clear":
                clearDebugData(player);
                break;
                
            case "help":
            default:
                showHelp(player);
                break;
        }
        
        return true;
    }
    
    private void showHelp(Player player) {
        player.sendMessage("¬ße=== –û—Ç–ª–∞–¥—á–∏–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ ===");
        player.sendMessage("¬ß7–ö–æ–º–∞–Ω–¥—ã:");
        player.sendMessage("¬ßf/debug on ¬ß7- –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É");
        player.sendMessage("¬ßf/debug off ¬ß7- –û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É");
        player.sendMessage("¬ßf/debug toggle ¬ß7- –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É");
        player.sendMessage("¬ßf/debug stats ¬ß7- –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É");
        player.sendMessage("¬ßf/debug step ¬ß7- –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫");
        player.sendMessage("¬ßf/debug stepmode ¬ß7- –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–π —Ä–µ–∂–∏–º");
        player.sendMessage("¬ßf/debug vars ¬ß7- –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ");
        player.sendMessage("¬ßf/debug clear ¬ß7- –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç–ª–∞–¥–∫–∏");
        player.sendMessage("¬ßf/debug help ¬ß7- –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É");
    }
    
    private void showVariables(Player player) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
        // –ü–æ–∫–∞ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        player.sendMessage("¬ßeüìä –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:");
        player.sendMessage("¬ß7–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞,");
        player.sendMessage("¬ß7–≤–∫–ª—é—á–∏—Ç–µ –æ—Ç–ª–∞–¥–∫—É –∫–æ–º–∞–Ω–¥–æ–π ¬ßf/debug on");
        player.sendMessage("¬ß7–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!");
    }
    
    private void clearDebugData(Player player) {
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–∞
        plugin.getScriptDebugger().clearDebugData(player);
        player.sendMessage("¬ßa‚úì –î–∞–Ω–Ω—ã–µ –æ—Ç–ª–∞–¥–∫–∏ –æ—á–∏—â–µ–Ω—ã");
    }
} 