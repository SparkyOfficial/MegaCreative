package com.megacreative.commands;
import com.megacreative.MegaCreative;
import com.megacreative.coding.CodingItems;
import com.megacreative.models.CreativeWorld;
import com.megacreative.models.WorldMode;
import org.bukkit.*;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.persistence.PersistentDataType;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 *
 * Command to switch to development mode
 *
 * Befehl zum Wechseln in den Entwicklungsmodus
 */
public class DevCommand implements CommandExecutor {
   
    private final MegaCreative plugin;
   
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã DevCommand
     * @param plugin –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–∞–≥–∏–Ω
     *
     * Constructor for DevCommand
     * @param plugin main plugin
     *
     * Konstruktor f√ºr DevCommand
     * @param plugin Haupt-Plugin
     */
    public DevCommand(MegaCreative plugin) {
        this.plugin = plugin;
    }
   
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /dev
     * @param sender –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã
     * @param command –∫–æ–º–∞–Ω–¥–∞
     * @param label –º–µ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
     * @param args –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
     * @return true –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
     *
     * Handles execution of the /dev command
     * @param sender command sender
     * @param command command
     * @param label command label
     * @param args command arguments
     * @return true if command executed successfully
     *
     * Verarbeitet die Ausf√ºhrung des /dev-Befehls
     * @param sender Befehlsabsender
     * @param command Befehl
     * @param label Befehlsbezeichnung
     * @param args Befehlsargumente
     * @return true, wenn der Befehl erfolgreich ausgef√ºhrt wurde
     */
    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player player)) {
            sender.sendMessage("¬ßc–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º!");
            return true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–º–∞–Ω–¥—ã
        if (args.length > 0) {
            switch (args[0].toLowerCase()) {
                case "refresh", "tools" -> {
                    plugin.getServiceRegistry().getDevInventoryManager().refreshTools(player);
                    return true;
                }
                case "variables" -> {
                    openVariablesMenu(player);
                    return true;
                }
                case "help" -> {
                    sendHelp(player);
                    return true;
                }
                // üéÜ ENHANCED: Add dual world switching support
                case "switch", "code" -> {
                    // Find current world and switch to its dev version
                    CreativeWorld currentWorld = findCreativeWorld(player.getWorld());
                    if (currentWorld != null && currentWorld.isPaired()) {
                        plugin.getWorldManager().switchToDevWorld(player, currentWorld.getId());
                        return true;
                    }
                    // Fall through to normal dev mode creation
                }
            }
        }
        
        World currentWorld = player.getWorld();
        CreativeWorld creativeWorld = findCreativeWorld(currentWorld);
       
        if (creativeWorld == null) {
            player.sendMessage("¬ßc–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–∏—Ä–µ MegaCreative!");
            return true;
        }
        
        if (!creativeWorld.canCode(player)) {
            player.sendMessage("¬ßc–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —ç—Ç–æ–º –º–∏—Ä–µ!");
            return true;
        }
       
        creativeWorld.setMode(WorldMode.DEV);

        // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—é –ª–æ–≥–∏–∫—É –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        new org.bukkit.scheduler.BukkitRunnable() {
            @Override
            public void run() {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–∏—Ä–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                World devWorld = Bukkit.getWorld(creativeWorld.getDevWorldName());
                if (devWorld != null) {
                    // –ú–∏—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ—Å—Ç–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º
                    teleportToDevWorld(player, devWorld);
                } else {
                    // –ú–∏—Ä –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å
                    player.sendMessage("¬ße–°–æ–∑–¥–∞–µ–º –º–∏—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...");
                    
                    try {
                        World newDevWorld = createDevWorld(creativeWorld);
                        if (newDevWorld != null) {
                            setupDevWorld(newDevWorld);
                            teleportToDevWorld(player, newDevWorld);
                            
                            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∏—Ä –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
                            Bukkit.getScheduler().runTaskAsynchronously(plugin, () -> {
                                try {
                                    plugin.getWorldManager().saveWorld(creativeWorld);
                                } catch (Exception e) {
                                    plugin.getLogger().warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∏—Ä–∞: " + e.getMessage());
                                    Bukkit.getScheduler().runTask(plugin, () -> 
                                        player.sendMessage("¬ßc–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∏—Ä–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."));
                                }
                            });
                        } else {
                            player.sendMessage("¬ßc–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!");
                        }
                    } catch (Exception e) {
                        plugin.getLogger().severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: " + e.getMessage());
                        plugin.getLogger().severe("Stack trace: " + java.util.Arrays.toString(e.getStackTrace()));
                        player.sendMessage("¬ßc–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.");
                    }
                }
            }
        }.runTask(plugin); // –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        return true;
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /dev
     * Displays help for the /dev command
     * Zeigt Hilfe f√ºr den /dev-Befehl an
     */
    private void sendHelp(Player player) {
        player.sendMessage("¬ß8¬ßm                    ¬ßr ¬ß6¬ßl/dev –°–ø—Ä–∞–≤–∫–∞ ¬ß8¬ßm                    ");
        player.sendMessage("¬ß7/dev ¬ß8- ¬ßf–ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏");
        player.sendMessage("¬ß7/dev refresh ¬ß8- ¬ßf–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã");
        player.sendMessage("¬ß7/dev tools ¬ß8- ¬ßf–¢–æ –∂–µ, —á—Ç–æ –∏ refresh");
        player.sendMessage("¬ß7/dev variables ¬ß8- ¬ßf–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö");
        player.sendMessage("¬ß7/dev switch ¬ß8- ¬ßf–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–¥—É–∞–ª—å–Ω—ã–µ –º–∏—Ä—ã)");
        player.sendMessage("¬ß7/dev help ¬ß8- ¬ßf–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É");
        player.sendMessage("¬ß8¬ßm                                                        ");
    }
    
    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–±–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
     * Opens the variables menu (basic implementation)
     * √ñffnet das Variablen-Men√º (Grundimplementierung)
     */
    private void openVariablesMenu(Player player) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ –≤ –º–∏—Ä–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (!player.getWorld().getName().endsWith("_dev")) {
            player.sendMessage("¬ßc–ö–æ–º–∞–Ω–¥–∞ /dev variables –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –º–∏—Ä–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!");
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ GUI —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
        org.bukkit.inventory.Inventory variablesInventory = org.bukkit.Bukkit.createInventory(null, 27, "¬ß8–ú–µ–Ω—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö");
        
        // –¢–µ–∫—Å—Ç (–∫–Ω–∏–≥–∞)
        org.bukkit.inventory.ItemStack textVar = new org.bukkit.inventory.ItemStack(org.bukkit.Material.WRITABLE_BOOK);
        org.bukkit.inventory.meta.ItemMeta textMeta = textVar.getItemMeta();
        textMeta.setDisplayName("¬ße¬ßl–¢–µ–∫—Å—Ç–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è");
        textMeta.setLore(java.util.Arrays.asList(
            "¬ß7–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞",
            "¬ße–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º"
        ));
        textVar.setItemMeta(textMeta);
        
        // –ß–∏—Å–ª–æ (—Å–ª–∞–π–º)
        org.bukkit.inventory.ItemStack numberVar = new org.bukkit.inventory.ItemStack(org.bukkit.Material.SLIME_BALL);
        org.bukkit.inventory.meta.ItemMeta numberMeta = numberVar.getItemMeta();
        numberMeta.setDisplayName("¬ßa¬ßl–ß–∏—Å–ª–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è");
        numberMeta.setLore(java.util.Arrays.asList(
            "¬ß7–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∏—Å–µ–ª",
            "¬ße–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º"
        ));
        numberVar.setItemMeta(numberMeta);
        
        // –õ–æ–∫–∞—Ü–∏—è (–∫–æ–º–ø–∞—Å)
        org.bukkit.inventory.ItemStack locationVar = new org.bukkit.inventory.ItemStack(org.bukkit.Material.COMPASS);
        org.bukkit.inventory.meta.ItemMeta locationMeta = locationVar.getItemMeta();
        locationMeta.setDisplayName("¬ßb¬ßl–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏–∏");
        locationMeta.setLore(java.util.Arrays.asList(
            "¬ß7–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç",
            "¬ße–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º"
        ));
        locationVar.setItemMeta(locationMeta);
        
        // –ü—Ä–µ–¥–º–µ—Ç (—Å—É–Ω–¥—É–∫)
        org.bukkit.inventory.ItemStack itemVar = new org.bukkit.inventory.ItemStack(org.bukkit.Material.CHEST);
        org.bukkit.inventory.meta.ItemMeta itemMeta = itemVar.getItemMeta();
        itemMeta.setDisplayName("¬ß6¬ßl–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–µ–¥–º–µ—Ç–∞");
        itemMeta.setLore(java.util.Arrays.asList(
            "¬ß7–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            "¬ße–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º"
        ));
        itemVar.setItemMeta(itemMeta);
        
        // –†–∞–∑–º–µ—â–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
        variablesInventory.setItem(10, textVar);
        variablesInventory.setItem(12, numberVar);
        variablesInventory.setItem(14, locationVar);
        variablesInventory.setItem(16, itemVar);
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        player.openInventory(variablesInventory);
        player.playSound(player.getLocation(), org.bukkit.Sound.UI_BUTTON_CLICK, 0.7f, 1.0f);
        player.sendMessage("¬ßa–ú–µ–Ω—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–æ! –í–æ–∑—å–º–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.");
    }
   
    /**
     * –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–≥—Ä–æ–∫–∞ –≤ –º–∏—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –µ–≥–æ
     * Teleports player to development world and configures it
     * Teleportiert den Spieler in die Entwicklungs-Welt und konfiguriert sie
     */
    private void teleportToDevWorld(Player player, World devWorld) {
        player.teleport(devWorld.getSpawnLocation());
        player.setGameMode(GameMode.CREATIVE);
        
        // –û—á–∏—â–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        player.getInventory().clear();
        
        // –í—ã–¥–∞–µ–º –±–ª–æ–∫–∏ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ DevInventoryManager
        plugin.getServiceRegistry().getDevInventoryManager().forceRestoreTools(player);
        
        player.sendMessage("¬ßa–í—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ –º–∏—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!");
        player.sendMessage("¬ß7–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–¥ –¥–ª—è —Å–≤–æ–µ–≥–æ –º–∏—Ä–∞");
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –º–∏—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
     */
    private World createDevWorld(CreativeWorld creativeWorld) {
        try {
            WorldCreator creator = new WorldCreator(creativeWorld.getDevWorldName());
            creator.type(WorldType.FLAT);
            creator.environment(World.Environment.NORMAL);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            creator.generator(new com.megacreative.worlds.DevWorldGenerator());
            
            // üîß FIX: Add proper flat world generator settings to prevent "No key layers" error
            creator.generatorSettings("{\"layers\":[{\"block\":\"bedrock\",\"height\":1},{\"block\":\"stone\",\"height\":2},{\"block\":\"grass_block\",\"height\":1}],\"biome\":\"plains\"}");
            creator.generateStructures(false);
            
            // –°–æ–∑–¥–∞–µ–º –º–∏—Ä —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            return Bukkit.createWorld(creator);
            
        } catch (Exception e) {
            plugin.getLogger().severe("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: " + e.getMessage());
            plugin.getLogger().severe("Stack trace: " + java.util.Arrays.toString(e.getStackTrace()));
            
            // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –º–∏—Ä —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            try {
                WorldCreator fallbackCreator = new WorldCreator(creativeWorld.getDevWorldName());
                fallbackCreator.environment(World.Environment.NORMAL);
                fallbackCreator.type(WorldType.NORMAL);
                fallbackCreator.generateStructures(false);
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                fallbackCreator.generator(new com.megacreative.worlds.DevWorldGenerator());
                
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ (setupDevWorld) –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                return Bukkit.createWorld(fallbackCreator);
                
            } catch (Exception fallbackException) {
                plugin.getLogger().severe("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏—Ä–∞: " + fallbackException.getMessage());
                plugin.getLogger().severe("Stack trace: " + java.util.Arrays.toString(fallbackException.getStackTrace()));
                return null;
            }
        }
    }
   
    private void setupDevWorld(World devWorld) {
        try {
            devWorld.setGameRule(GameRule.DO_WEATHER_CYCLE, false);
            devWorld.setGameRule(GameRule.DO_DAYLIGHT_CYCLE, false);
            devWorld.setGameRule(GameRule.DO_MOB_SPAWNING, false);
            devWorld.setGameRule(GameRule.ANNOUNCE_ADVANCEMENTS, false);
            devWorld.setGameRule(GameRule.KEEP_INVENTORY, true);
            devWorld.setGameRule(GameRule.DO_FIRE_TICK, false);
            devWorld.setGameRule(GameRule.MOB_GRIEFING, false);
            
            devWorld.setTime(6000); // –î–µ–Ω—å
            devWorld.setStorm(false);
            devWorld.setThundering(false);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∞–≤–Ω –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ
            Location spawnLocation = new Location(devWorld, 0, 70, 0);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ñ–ª–∞–≥—É, —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å —ç—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑
            if (!devWorld.getPersistentDataContainer().has(new NamespacedKey(plugin, "initialized"), PersistentDataType.BYTE)) {
                plugin.getLogger().info("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...");
                
                // –°–ø–∞–≤–Ω –Ω–∞–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π
                spawnLocation = new Location(devWorld, 0, 66, 0);
                // –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥, —á—Ç–æ –º–∏—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω
                devWorld.getPersistentDataContainer().set(new NamespacedKey(plugin, "initialized"), PersistentDataType.BYTE, (byte)1);
            }
            
            devWorld.setSpawnLocation(spawnLocation);
           
            WorldBorder border = devWorld.getWorldBorder();
            border.setCenter(0, 0);
            border.setSize(400); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            border.setWarningDistance(10);
            
        } catch (Exception e) {
            plugin.getLogger().warning("–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: " + e.getMessage());
        }
    }
   
    private CreativeWorld findCreativeWorld(World bukkitWorld) {
        try {
            String worldName = bukkitWorld.getName();
            
            // üîß FIX: Remove prefix and ALL possible suffixes for dual world architecture
            if (worldName.startsWith("megacreative_")) {
                String id = worldName.replace("megacreative_", "")
                                      .replace("-code", "")    // New dev world suffix
                                      .replace("-world", "")   // New play world suffix  
                                      .replace("_dev", "");    // Legacy compatibility
                return plugin.getWorldManager().getWorld(id);
            }
        } catch (Exception e) {
            plugin.getLogger().warning("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –º–∏—Ä–∞: " + e.getMessage());
        }
        return null;
    }
}