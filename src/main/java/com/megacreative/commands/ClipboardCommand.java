package com.megacreative.commands;

import com.megacreative.MegaCreative;
import com.megacreative.tools.CodeBlockClipboard;\nimport org.bukkit.Location;\nimport org.bukkit.command.Command;\nimport org.bukkit.command.CommandExecutor;\nimport org.bukkit.command.CommandSender;\nimport org.bukkit.command.TabCompleter;\nimport org.bukkit.entity.Player;\n\nimport java.util.*;\n\n/**\n * Command interface for the code block clipboard tool\n */\npublic class ClipboardCommand implements CommandExecutor, TabCompleter {\n    \n    private final MegaCreative plugin;\n    private final CodeBlockClipboard clipboard;\n    \n    // Selection state for region copying\n    private final Map<UUID, Location> firstCorners = new HashMap<>();\n    private final Map<UUID, Location> secondCorners = new HashMap<>();\n    \n    public ClipboardCommand(MegaCreative plugin, CodeBlockClipboard clipboard) {\n        this.plugin = plugin;\n        this.clipboard = clipboard;\n    }\n    \n    @Override\n    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {\n        if (!(sender instanceof Player player)) {\n            sender.sendMessage(\"\u00a7c\u042d\u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0433\u0440\u043e\u043a\u0430\u043c!\");\n            return true;\n        }\n        \n        if (args.length == 0) {\n            showHelp(player);\n            return true;\n        }\n        \n        String subCommand = args[0].toLowerCase();\n        \n        switch (subCommand) {\n            case \"copy\" -> handleCopy(player, args);\n            case \"paste\" -> handlePaste(player, args);\n            case \"preview\" -> handlePreview(player);\n            case \"clear\" -> handleClear(player);\n            case \"info\" -> handleInfo(player);\n            case \"save\" -> handleSave(player, args);\n            case \"load\" -> handleLoad(player, args);\n            case \"list\" -> handleList(player);\n            case \"pos1\", \"p1\" -> handlePos1(player);\n            case \"pos2\", \"p2\" -> handlePos2(player);\n            case \"select\" -> handleSelect(player, args);\n            default -> showHelp(player);\n        }\n        \n        return true;\n    }\n    \n    private void handleCopy(Player player, String[] args) {\n        if (args.length < 2) {\n            player.sendMessage(\"\u00a7c\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435: /clipboard copy <block|chain|region>\");\n            return;\n        }\n        \n        String copyType = args[1].toLowerCase();\n        \n        switch (copyType) {\n            case \"block\" -> {\n                // Copy the block the player is looking at\n                Location targetLoc = player.getTargetBlock(null, 10).getLocation();\n                // This would integrate with the AutoConnectionManager to get the CodeBlock\n                player.sendMessage(\"\u00a7a\u2713 \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u0430...\");\n                // clipboard.copyBlock(player, codeBlock);\n            }\n            case \"chain\" -> {\n                // Copy chain starting from the block the player is looking at\n                Location targetLoc = player.getTargetBlock(null, 10).getLocation();\n                player.sendMessage(\"\u00a7a\u2713 \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0435\u043f\u043e\u0447\u043a\u0438...\");\n                // clipboard.copyChain(player, startBlock);\n            }\n            case \"region\" -> {\n                Location pos1 = firstCorners.get(player.getUniqueId());\n                Location pos2 = secondCorners.get(player.getUniqueId());\n                \n                if (pos1 == null || pos2 == null) {\n                    player.sendMessage(\"\u00a7c\u2716 \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0440\u0435\u0433\u0438\u043e\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e /clipboard pos1 \u0438 /clipboard pos2\");\n                    return;\n                }\n                \n                clipboard.copyRegion(player, pos1, pos2);\n            }\n            default -> player.sendMessage(\"\u00a7c\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: \" + copyType);\n        }\n    }\n    \n    private void handlePaste(Player player, String[] args) {\n        Location targetLoc;\n        \n        if (args.length >= 4) {\n            // Paste at specific coordinates\n            try {\n                int x = Integer.parseInt(args[1]);\n                int y = Integer.parseInt(args[2]);\n                int z = Integer.parseInt(args[3]);\n                targetLoc = new Location(player.getWorld(), x, y, z);\n            } catch (NumberFormatException e) {\n                player.sendMessage(\"\u00a7c\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b!\");\n                return;\n            }\n        } else {\n            // Paste at current location\n            targetLoc = player.getLocation().getBlock().getLocation();\n        }\n        \n        clipboard.paste(player, targetLoc);\n    }\n    \n    private void handlePreview(Player player) {\n        Location targetLoc = player.getLocation().getBlock().getLocation();\n        clipboard.showPreview(player, targetLoc);\n    }\n    \n    private void handleClear(Player player) {\n        clipboard.clear(player);\n    }\n    \n    private void handleInfo(Player player) {\n        String info = clipboard.getClipboardInfo(player);\n        player.sendMessage(\"\u00a76=== \u0411\u0443\u0444\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0430 ===\");\n        player.sendMessage(info);\n    }\n    \n    private void handleSave(Player player, String[] args) {\n        if (args.length < 2) {\n            player.sendMessage(\"\u00a7c\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435: /clipboard save <\u0438\u043c\u044f>\");\n            return;\n        }\n        \n        String name = String.join(\" \", Arrays.copyOfRange(args, 1, args.length));\n        clipboard.saveToShared(player, name);\n    }\n    \n    private void handleLoad(Player player, String[] args) {\n        if (args.length < 2) {\n            player.sendMessage(\"\u00a7c\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435: /clipboard load <\u0438\u043c\u044f>\");\n            return;\n        }\n        \n        String name = String.join(\" \", Arrays.copyOfRange(args, 1, args.length));\n        clipboard.loadFromShared(player, name);\n    }\n    \n    private void handleList(Player player) {\n        clipboard.listShared(player);\n    }\n    \n    private void handlePos1(Player player) {\n        Location loc = player.getLocation().getBlock().getLocation();\n        firstCorners.put(player.getUniqueId(), loc);\n        player.sendMessage(String.format(\"\u00a7a\u2713 \u041f\u0435\u0440\u0432\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430: %d, %d, %d\", \n            loc.getBlockX(), loc.getBlockY(), loc.getBlockZ()));\n    }\n    \n    private void handlePos2(Player player) {\n        Location loc = player.getLocation().getBlock().getLocation();\n        secondCorners.put(player.getUniqueId(), loc);\n        player.sendMessage(String.format(\"\u00a7a\u2713 \u0412\u0442\u043e\u0440\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430: %d, %d, %d\", \n            loc.getBlockX(), loc.getBlockY(), loc.getBlockZ()));\n            \n        Location pos1 = firstCorners.get(player.getUniqueId());\n        if (pos1 != null) {\n            int volume = Math.abs(loc.getBlockX() - pos1.getBlockX() + 1) * \n                        Math.abs(loc.getBlockY() - pos1.getBlockY() + 1) * \n                        Math.abs(loc.getBlockZ() - pos1.getBlockZ() + 1);\n            player.sendMessage(\"\u00a77\u041e\u0431\u044a\u0435\u043c \u0440\u0435\u0433\u0438\u043e\u043d\u0430: \" + volume + \" \u0431\u043b\u043e\u043a\u043e\u0432\");\n        }\n    }\n    \n    private void handleSelect(Player player, String[] args) {\n        if (args.length < 2) {\n            player.sendMessage(\"\u00a7c\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435: /clipboard select <all|clear>\");\n            return;\n        }\n        \n        String selectType = args[1].toLowerCase();\n        \n        switch (selectType) {\n            case \"all\" -> {\n                // Select entire coding area in current world\n                Location playerLoc = player.getLocation();\n                // This would integrate with DevWorldGenerator to get the coding area bounds\n                player.sendMessage(\"\u00a7a\u2713 \u0412\u044b\u0431\u0440\u0430\u043d\u0430 \u0432\u0441\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\");\n            }\n            case \"clear\" -> {\n                firstCorners.remove(player.getUniqueId());\n                secondCorners.remove(player.getUniqueId());\n                player.sendMessage(\"\u00a7a\u2713 \u0412\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0447\u0438\u0449\u0435\u043d\u043e\");\n            }\n            default -> player.sendMessage(\"\u00a7c\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f: \" + selectType);\n        }\n    }\n    \n    private void showHelp(Player player) {\n        player.sendMessage(\"\u00a76=== \u0411\u0443\u0444\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0430 \u043a\u043e\u0434\u043e\u0432\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 ===\");\n        player.sendMessage(\"\u00a7f/clipboard copy <block|chain|region> - \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\");\n        player.sendMessage(\"\u00a7f/clipboard paste [x y z] - \u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c\");\n        player.sendMessage(\"\u00a7f/clipboard preview - \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0435\u0432\u044c\u044e\");\n        player.sendMessage(\"\u00a7f/clipboard info - \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0431\u0443\u0444\u0435\u0440\u0435\");\n        player.sendMessage(\"\u00a7f/clipboard clear - \u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0431\u0443\u0444\u0435\u0440\");\n        player.sendMessage(\"\u00a77\u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0440\u0435\u0433\u0438\u043e\u043d\u0430:\");\n        player.sendMessage(\"\u00a7f/clipboard pos1 - \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u0443\u044e \u0442\u043e\u0447\u043a\u0443\");\n        player.sendMessage(\"\u00a7f/clipboard pos2 - \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0442\u043e\u0440\u0443\u044e \u0442\u043e\u0447\u043a\u0443\");\n        player.sendMessage(\"\u00a77\u041e\u0431\u0449\u0438\u0435 \u0431\u0443\u0444\u0435\u0440\u044b:\");\n        player.sendMessage(\"\u00a7f/clipboard save <\u0438\u043c\u044f> - \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432 \u043e\u0431\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440\");\n        player.sendMessage(\"\u00a7f/clipboard load <\u0438\u043c\u044f> - \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0438\u0437 \u043e\u0431\u0449\u0435\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0430\");\n        player.sendMessage(\"\u00a7f/clipboard list - \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u0449\u0438\u0445 \u0431\u0443\u0444\u0435\u0440\u043e\u0432\");\n    }\n    \n    @Override\n    public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {\n        if (args.length == 1) {\n            return List.of(\"copy\", \"paste\", \"preview\", \"clear\", \"info\", \"save\", \"load\", \"list\", \"pos1\", \"pos2\", \"select\");\n        }\n        \n        if (args.length == 2) {\n            switch (args[0].toLowerCase()) {\n                case \"copy\" -> {\n                    return List.of(\"block\", \"chain\", \"region\");\n                }\n                case \"select\" -> {\n                    return List.of(\"all\", \"clear\");\n                }\n            }\n        }\n        \n        return Collections.emptyList();\n    }\n}