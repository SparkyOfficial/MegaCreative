package com.megacreative.commands;

import com.megacreative.MegaCreative;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.File;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö –º–∏—Ä–æ–≤
 */
public class CleanWorldsCommand implements CommandExecutor {
    
    private final MegaCreative plugin;
    
    public CleanWorldsCommand(MegaCreative plugin) {
        this.plugin = plugin;
    }
    
    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("¬ßc–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤!");
            return true;
        }
        
        Player player = (Player) sender;
        
        if (!player.isOp()) {
            player.sendMessage("¬ßc–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!");
            return true;
        }
        
        if (args.length == 0) {
            showHelp(player);
            return true;
        }
        
        switch (args[0].toLowerCase()) {
            case "check":
                checkDamagedWorlds(player);
                break;
            case "clean":
                cleanDamagedWorlds(player);
                break;
            case "backup":
                backupWorlds(player);
                break;
            default:
                showHelp(player);
                break;
        }
        
        return true;
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ
     */
    private void showHelp(Player player) {
        player.sendMessage("¬ß6=== –û—á–∏—Å—Ç–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö –º–∏—Ä–æ–≤ ===");
        player.sendMessage("¬ße/cleanworlds check ¬ß7- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –º–∏—Ä—ã");
        player.sendMessage("¬ße/cleanworlds clean ¬ß7- –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –º–∏—Ä—ã");
        player.sendMessage("¬ße/cleanworlds backup ¬ß7- –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é");
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –º–∏—Ä—ã
     */
    private void checkDamagedWorlds(Player player) {
        player.sendMessage("¬ß6=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö –º–∏—Ä–æ–≤ ===");
        
        File dataFolder = new File(plugin.getDataFolder(), "worlds");
        if (!dataFolder.exists()) {
            player.sendMessage("¬ßa–ü–∞–ø–∫–∞ —Å –º–∏—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í—Å–µ —á–∏—Å—Ç–æ!");
            return;
        }
        
        File[] worldFiles = dataFolder.listFiles((dir, name) -> name.endsWith(".yml"));
        if (worldFiles == null || worldFiles.length == 0) {
            player.sendMessage("¬ßa–§–∞–π–ª—ã –º–∏—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í—Å–µ —á–∏—Å—Ç–æ!");
            return;
        }
        
        int damagedCount = 0;
        int totalCount = worldFiles.length;
        
        for (File worldFile : worldFiles) {
            YamlConfiguration config = YamlConfiguration.loadConfiguration(worldFile);
            String worldData = config.getString("worldData");
            
            if (worldData == null || worldData.trim().isEmpty()) {
                player.sendMessage("¬ßc‚ùå " + worldFile.getName() + " - –ø–æ–≤—Ä–µ–∂–¥–µ–Ω");
                damagedCount++;
            } else {
                player.sendMessage("¬ßa‚úÖ " + worldFile.getName() + " - –≤ –ø–æ—Ä—è–¥–∫–µ");
            }
        }
        
        player.sendMessage("¬ß7");
        player.sendMessage("¬ß6–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:");
        player.sendMessage("¬ß7–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: " + totalCount);
        player.sendMessage("¬ßa–ò—Å–ø—Ä–∞–≤–Ω—ã—Ö: " + (totalCount - damagedCount));
        player.sendMessage("¬ßc–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö: " + damagedCount);
        
        if (damagedCount > 0) {
            player.sendMessage("¬ße–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cleanworlds clean –¥–ª—è –æ—á–∏—Å—Ç–∫–∏");
        }
    }
    
    /**
     * –û—á–∏—â–∞–µ—Ç –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –º–∏—Ä—ã
     */
    private void cleanDamagedWorlds(Player player) {
        player.sendMessage("¬ß6=== –û—á–∏—Å—Ç–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö –º–∏—Ä–æ–≤ ===");
        
        File dataFolder = new File(plugin.getDataFolder(), "worlds");
        if (!dataFolder.exists()) {
            player.sendMessage("¬ßa–ü–∞–ø–∫–∞ —Å –º–∏—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
            return;
        }
        
        File[] worldFiles = dataFolder.listFiles((dir, name) -> name.endsWith(".yml"));
        if (worldFiles == null || worldFiles.length == 0) {
            player.sendMessage("¬ßa–§–∞–π–ª—ã –º–∏—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
            return;
        }
        
        int cleanedCount = 0;
        
        for (File worldFile : worldFiles) {
            YamlConfiguration config = YamlConfiguration.loadConfiguration(worldFile);
            String worldData = config.getString("worldData");
            
            if (worldData == null || worldData.trim().isEmpty()) {
                try {
                    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
                    File backupFile = new File(worldFile.getParentFile(), worldFile.getName() + ".backup");
                    worldFile.renameTo(backupFile);
                    
                    player.sendMessage("¬ßeüóëÔ∏è –£–¥–∞–ª–µ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –º–∏—Ä: " + worldFile.getName());
                    cleanedCount++;
                } catch (Exception e) {
                    player.sendMessage("¬ßc‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ " + worldFile.getName() + ": " + e.getMessage());
                }
            }
        }
        
        player.sendMessage("¬ß7");
        player.sendMessage("¬ßa–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: " + cleanedCount);
        
        if (cleanedCount > 0) {
            player.sendMessage("¬ße–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π");
        }
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –º–∏—Ä–æ–≤
     */
    private void backupWorlds(Player player) {
        player.sendMessage("¬ß6=== –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ ===");
        
        File dataFolder = new File(plugin.getDataFolder(), "worlds");
        if (!dataFolder.exists()) {
            player.sendMessage("¬ßa–ü–∞–ø–∫–∞ —Å –º–∏—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
            return;
        }
        
        File backupFolder = new File(plugin.getDataFolder(), "worlds_backup");
        if (!backupFolder.exists()) {
            backupFolder.mkdirs();
        }
        
        File[] worldFiles = dataFolder.listFiles((dir, name) -> name.endsWith(".yml"));
        if (worldFiles == null || worldFiles.length == 0) {
            player.sendMessage("¬ßa–§–∞–π–ª—ã –º–∏—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
            return;
        }
        
        int backupCount = 0;
        
        for (File worldFile : worldFiles) {
            try {
                File backupFile = new File(backupFolder, worldFile.getName());
                java.nio.file.Files.copy(worldFile.toPath(), backupFile.toPath(), 
                    java.nio.file.StandardCopyOption.REPLACE_EXISTING);
                backupCount++;
            } catch (Exception e) {
                player.sendMessage("¬ßc‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ " + worldFile.getName());
            }
        }
        
        player.sendMessage("¬ßa–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞! –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: " + backupCount);
        player.sendMessage("¬ß7–ü–∞–ø–∫–∞: " + backupFolder.getAbsolutePath());
    }
} 