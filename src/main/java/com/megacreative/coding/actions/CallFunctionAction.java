package com.megacreative.coding.actions;

import com.megacreative.coding.BlockAction;
import com.megacreative.coding.CodeBlock;
import com.megacreative.coding.CodeScript;
import com.megacreative.coding.ExecutionContext;
import com.megacreative.coding.ParameterResolver;
import com.megacreative.coding.ScriptExecutor;
import com.megacreative.MegaCreative;
import org.bukkit.entity.Player;

import java.util.Map;

public class CallFunctionAction implements BlockAction {
    
    @Override
    public void execute(ExecutionContext context) {
        Player player = context.getPlayer();
        CodeBlock block = context.getCurrentBlock();

        if (player == null || block == null) return;

        // –ü–æ–ª—É—á–∞–µ–º –∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        Object rawFunctionName = block.getParameter("function");
        String functionName = ParameterResolver.resolve(context, rawFunctionName);

        if (functionName == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –ø–∞—Ä–∞–º–µ—Ç—Ä 'function' –Ω–µ —É–∫–∞–∑–∞–Ω");
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞–≥–∏–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º
        MegaCreative plugin = context.getPlugin();
        if (plugin == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –ø–ª–∞–≥–∏–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
            return;
        }

        // –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ —Ç–µ–∫—É—â–µ–º –º–∏—Ä–µ
        CodeScript function = findFunction(plugin, player, functionName);
        if (function == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è '" + functionName + "' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
        ExecutionContext functionContext = context.withCurrentBlock(function.getRootBlock(), context.getBlockLocation());
        
        // –ö–æ–ø–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏
        for (Map.Entry<String, Object> entry : context.getVariables().entrySet()) {
            functionContext.setVariable(entry.getKey(), entry.getValue());
        }

        try {
            // –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            ScriptExecutor executor = new ScriptExecutor(plugin);
            executor.processBlock(function.getRootBlock(), functionContext);
            
            player.sendMessage("¬ßaüìû –§—É–Ω–∫—Ü–∏—è '" + functionName + "' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");
            
        } catch (Exception e) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ '" + functionName + "': " + e.getMessage());
        }
    }
    
    /**
     * –ò—â–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö —Ç–µ–∫—É—â–µ–≥–æ –º–∏—Ä–∞
     */
    private CodeScript findFunction(MegaCreative plugin, Player player, String functionName) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–∏—Ä –∏–≥—Ä–æ–∫–∞
        var creativeWorld = plugin.getWorldManager().findCreativeWorldByBukkit(player.getWorld());
        if (creativeWorld == null) return null;
        
        // –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å—Ä–µ–¥–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤ –º–∏—Ä–∞
        for (CodeScript script : creativeWorld.getScripts()) {
            if (script.getName().equals(functionName) && script.getType() == CodeScript.ScriptType.FUNCTION) {
                return script;
            }
        }
        
        return null;
    }
} 