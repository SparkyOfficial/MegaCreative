package com.megacreative.coding.actions;

import com.megacreative.coding.BlockAction;
import com.megacreative.coding.CodeBlock;
import com.megacreative.coding.ExecutionContext;
import com.megacreative.coding.ParameterResolver;
import com.megacreative.coding.values.DataValue;
import com.megacreative.coding.variables.VariableManager;
import org.bukkit.GameMode;
import org.bukkit.entity.Player;

public class SetGameModeAction implements BlockAction {
    @Override
    public void execute(ExecutionContext context) {
        Player player = context.getPlayer();
        CodeBlock block = context.getCurrentBlock();

        if (player == null || block == null) return;

        VariableManager variableManager = context.getPlugin().getVariableManager();
        if (variableManager == null) return;
        
        ParameterResolver resolver = new ParameterResolver(variableManager);

        // –ü–æ–ª—É—á–∞–µ–º –∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        DataValue rawMode = block.getParameter("mode");
        if (rawMode == null) return;

        String modeStr = resolver.resolve(context, rawMode).asString();

        if (modeStr == null) return;

        try {
            GameMode gameMode = GameMode.valueOf(modeStr.toUpperCase());
            player.setGameMode(gameMode);
            
            player.sendMessage("¬ßaüéÆ –†–µ–∂–∏–º –∏–≥—Ä—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: " + gameMode.name());
            
        } catch (IllegalArgumentException e) {
            player.sendMessage("¬ßc–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º –∏–≥—Ä—ã: " + modeStr);
        }
    }
} 