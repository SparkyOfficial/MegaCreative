package com.megacreative.coding.actions.control;

import com.megacreative.coding.BlockAction;
import com.megacreative.coding.CodeBlock;
import com.megacreative.coding.ExecutionContext;
import com.megacreative.coding.ParameterResolver;
import com.megacreative.coding.executors.ExecutionResult;
import com.megacreative.coding.values.DataValue;
import com.megacreative.MegaCreative;
import com.megacreative.services.FunctionManager;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.entity.Player;

public class SaveFunctionAction implements BlockAction {
    
    @Override
    public ExecutionResult execute(CodeBlock block, ExecutionContext context) {
        Player player = context.getPlayer();

        if (player == null || block == null) {
            return ExecutionResult.error("Player or block is null");
        }

        ParameterResolver resolver = new ParameterResolver(context);

        // –ü–æ–ª—É—á–∞–µ–º –∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        DataValue rawFunctionName = block.getParameter("name");
        if (rawFunctionName == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –ø–∞—Ä–∞–º–µ—Ç—Ä 'name' –Ω–µ —É–∫–∞–∑–∞–Ω");
            return ExecutionResult.error("Function name not specified");
        }
        
        DataValue functionNameValue = resolver.resolve(context, rawFunctionName);
        String functionName = functionNameValue.asString();

        if (functionName == null || functionName.isEmpty()) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –ø–∞—Ä–∞–º–µ—Ç—Ä 'name' –Ω–µ —É–∫–∞–∑–∞–Ω");
            return ExecutionResult.error("Function name not specified");
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞–≥–∏–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
        MegaCreative plugin = context.getPlugin();
        if (plugin == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –ø–ª–∞–≥–∏–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
            return ExecutionResult.error("Plugin not available");
        }

        // –ü–æ–ª—É—á–∞–µ–º FunctionManager
        FunctionManager functionManager = plugin.getServiceRegistry().getFunctionManager();
        if (functionManager == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: FunctionManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
            return ExecutionResult.error("FunctionManager not available");
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–∏—Ä –∏–≥—Ä–æ–∫–∞
        var creativeWorld = plugin.getServiceRegistry().getWorldManager().findCreativeWorldByBukkit(player.getWorld());
        if (creativeWorld == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –≤—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º –º–∏—Ä–µ");
            return ExecutionResult.error("Not in creative world");
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ –∫–∞–∫ –∫–æ—Ä–Ω–µ–≤–æ–π –±–ª–æ–∫ —Ñ—É–Ω–∫—Ü–∏–∏
        CodeBlock functionRoot = block.getNextBlock();
        if (functionRoot == null) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –Ω–µ—Ç –±–ª–æ–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–∏");
            return ExecutionResult.error("No block to save as function");
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —á–µ—Ä–µ–∑ FunctionManager
        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –º–∏—Ä–∞ –∏–∑ CreativeWorld
        String worldName = creativeWorld.getWorldName();
        if (functionManager.functionExists(worldName, functionName)) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è '" + functionName + "' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
            return ExecutionResult.error("Function '" + functionName + "' already exists");
        }
        
        functionManager.registerFunction(worldName, functionName, functionRoot);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∏—Ä
        plugin.getServiceRegistry().getWorldManager().saveWorld(creativeWorld);
        player.sendMessage("¬ßaüíæ –§—É–Ω–∫—Ü–∏—è '" + functionName + "' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞");
        return ExecutionResult.success("Function '" + functionName + "' saved");
    }
}