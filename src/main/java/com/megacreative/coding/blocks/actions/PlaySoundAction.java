package com.megacreative.coding.blocks.actions;

import com.megacreative.coding.BlockAction;
import com.megacreative.coding.ExecutionContext;
import com.megacreative.coding.arguments.ParameterArgument;
import com.megacreative.coding.values.TextValue;
import com.megacreative.coding.values.NumberValue;
import org.bukkit.Sound;
import org.bukkit.entity.Player;

import java.util.Optional;

public class PlaySoundAction implements BlockAction {

    private final ParameterArgument soundArgument;
    private final ParameterArgument volumeArgument;
    private final ParameterArgument pitchArgument;

    public PlaySoundAction() {
        this.soundArgument = new ParameterArgument("sound");
        this.volumeArgument = new ParameterArgument("volume");
        this.pitchArgument = new ParameterArgument("pitch");
    }

    @Override
    public void execute(ExecutionContext context) {
        Player player = context.getPlayer();
        if (player == null) {
            context.getPlugin().getLogger().warning("PlaySoundAction: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ");
            return;
        }

        if (context.getCurrentBlock() == null) {
            context.getPlugin().getLogger().warning("PlaySoundAction: –¢–µ–∫—É—â–∏–π –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω");
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –∑–≤—É–∫
        Optional<TextValue> soundValueOpt = soundArgument.parse(context.getCurrentBlock());
        if (soundValueOpt.isEmpty()) {
            context.getPlugin().getLogger().warning("PlaySoundAction: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–≤—É–∫");
            return;
        }

        String soundStr = soundValueOpt.get().get(context);
        if (soundStr == null || soundStr.trim().isEmpty()) {
            context.getPlugin().getLogger().warning("PlaySoundAction: –ó–≤—É–∫ –ø—É—Å—Ç");
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1.0)
        float volume = 1.0f;
        Optional<TextValue> volumeValueOpt = volumeArgument.parse(context.getCurrentBlock());
        if (volumeValueOpt.isPresent()) {
            String volumeStr = volumeValueOpt.get().get(context);
            if (volumeStr != null && !volumeStr.trim().isEmpty()) {
                try {
                    volume = Float.parseFloat(volumeStr);
                } catch (NumberFormatException e) {
                    context.getPlugin().getLogger().warning("PlaySoundAction: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≥—Ä–æ–º–∫–æ—Å—Ç–∏: " + volumeStr);
                }
            }
        }

        // –ü–æ–ª—É—á–∞–µ–º –≤—ã—Å–æ—Ç—É —Ç–æ–Ω–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1.0)
        float pitch = 1.0f;
        Optional<TextValue> pitchValueOpt = pitchArgument.parse(context.getCurrentBlock());
        if (pitchValueOpt.isPresent()) {
            String pitchStr = pitchValueOpt.get().get(context);
            if (pitchStr != null && !pitchStr.trim().isEmpty()) {
                try {
                    pitch = Float.parseFloat(pitchStr);
                } catch (NumberFormatException e) {
                    context.getPlugin().getLogger().warning("PlaySoundAction: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—ã—Å–æ—Ç—ã —Ç–æ–Ω–∞: " + pitchStr);
                }
            }
        }

        try {
            Sound sound = Sound.valueOf(soundStr.toUpperCase());
            player.playSound(player.getLocation(), sound, volume, pitch);
            player.sendMessage("¬ßaüîä –ó–≤—É–∫ '" + soundStr + "' –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω!");
            context.getPlugin().getLogger().info("PlaySoundAction: –ó–≤—É–∫ '" + soundStr + "' –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –¥–ª—è " + player.getName());
            
        } catch (IllegalArgumentException e) {
            player.sendMessage("¬ßc–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–≤—É–∫: " + soundStr);
            context.getPlugin().getLogger().warning("PlaySoundAction: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–≤—É–∫ '" + soundStr + "' –¥–ª—è –∏–≥—Ä–æ–∫–∞ " + player.getName());
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –¥–µ–π—Å—Ç–≤–∏—è
     */
    public String getActionName() {
        return "playSound";
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
     */
    public String getDescription() {
        return "–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∑–≤—É–∫ –¥–ª—è –∏–≥—Ä–æ–∫–∞";
    }
} 