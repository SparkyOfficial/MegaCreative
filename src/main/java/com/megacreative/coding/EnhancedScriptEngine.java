package com.megacreative.coding;

import com.megacreative.coding.executors.ExecutionResult;
import com.megacreative.coding.executors.AdvancedExecutionEngine;
import org.bukkit.entity.Player;

import java.util.concurrent.CompletableFuture;

/**
 * üéÜ Enhanced Script Engine Interface with Reference System-Style Execution Modes
 * 
 * Extends the basic ScriptEngine with advanced execution capabilities:
 * - Multiple execution modes (sync, async, delayed, batch, prioritized)
 * - Priority-based execution scheduling
 * - Performance monitoring and analytics
 * - Execution context isolation
 * - Resource management and throttling
 * 
 * üéÜ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–≤–∏–∂–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å —Ä–µ–∂–∏–º–∞–º–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ Reference System
 * 
 * –†–∞—Å—à–∏—Ä—è–µ—Ç –±–∞–∑–æ–≤—ã–π ScriptEngine —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
 * - –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ–∂–∏–º—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π, —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π, –ø–∞–∫–µ—Ç–Ω—ã–π, —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º)
 * - –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
 * - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
 * - –ò–∑–æ–ª—è—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
 * 
 * @author –ê–Ω–¥—Ä—ñ–π Bud–∏–ª—å–Ω–∏–∫–æ–≤
 */
public interface EnhancedScriptEngine extends ScriptEngine {
    
    /**
     * Execute a script with specified execution mode and priority
     * 
     * @param script The script to execute
     * @param player The player context
     * @param mode The execution mode
     * @param priority The execution priority
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with execution result
     * 
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
     * 
     * @param script –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param mode –†–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param priority –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    CompletableFuture<ExecutionResult> executeScript(CodeScript script, Player player, 
                                                   AdvancedExecutionEngine.ExecutionMode mode, 
                                                   AdvancedExecutionEngine.Priority priority, 
                                                   String trigger);
    
    /**
     * Execute a code block with specified execution mode and priority
     * 
     * @param block The block to execute
     * @param player The player context
     * @param mode The execution mode
     * @param priority The execution priority
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with execution result
     * 
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –±–ª–æ–∫ –∫–æ–¥–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
     * 
     * @param block –ë–ª–æ–∫ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param mode –†–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param priority –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    CompletableFuture<ExecutionResult> executeBlock(CodeBlock block, Player player, 
                                                  AdvancedExecutionEngine.ExecutionMode mode, 
                                                  AdvancedExecutionEngine.Priority priority, 
                                                  String trigger);
    
    /**
     * Execute a script with delayed execution
     * 
     * @param script The script to execute
     * @param player The player context
     * @param delayTicks The delay in server ticks
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with execution result
     * 
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
     * 
     * @param script –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param delayTicks –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Ç–∏–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    CompletableFuture<ExecutionResult> executeScriptDelayed(CodeScript script, Player player, 
                                                           long delayTicks, String trigger);
    
    /**
     * Execute multiple scripts in batch mode
     * 
     * @param scripts Array of scripts to execute
     * @param player The player context
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with batch execution result
     * 
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ –ø–∞–∫–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
     * 
     * @param scripts –ú–∞—Å—Å–∏–≤ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    CompletableFuture<ExecutionResult[]> executeScriptsBatch(CodeScript[] scripts, Player player, String trigger);
    
    /**
     * Cancel all executions for a specific player
     * 
     * @param player The player whose executions to cancel
     * 
     * –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
     * 
     * @param player –ò–≥—Ä–æ–∫, —á—å–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å
     */
    void cancelPlayerExecutions(Player player);
    
    /**
     * Get execution statistics and performance metrics
     * 
     * @return Execution statistics
     * 
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
     * 
     * @return –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    AdvancedExecutionEngine.ExecutionStatistics getExecutionStatistics();
    
    /**
     * Set the maximum execution time for scripts
     * 
     * @param maxTimeMs Maximum execution time in milliseconds
     * 
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
     * 
     * @param maxTimeMs –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    void setMaxExecutionTime(long maxTimeMs);
    
    /**
     * Set the maximum instructions per tick to prevent lag
     * 
     * @param maxInstructions Maximum instructions per server tick
     * 
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞ —Ç–∏–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∞–≥–æ–≤
     * 
     * @param maxInstructions –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞ —Ç–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞
     */
    void setMaxInstructionsPerTick(int maxInstructions);
    
    /**
     * Check if the engine is currently overloaded
     * 
     * @return true if the engine is under heavy load
     * 
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω –ª–∏ –¥–≤–∏–∂–æ–∫ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
     * 
     * @return true, –µ—Å–ª–∏ –¥–≤–∏–∂–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –±–æ–ª—å—à–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π
     */
    boolean isOverloaded();
    
    /**
     * Get the current throughput (executions per second)
     * 
     * @return Current execution throughput
     * 
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø—Ä–æ–ø—É—Å–∫–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å (–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥—É)
     * 
     * @return –¢–µ–∫—É—â–∞—è –ø—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    double getCurrentThroughput();
    
    /**
     * Prioritize execution for critical operations
     * 
     * @param script The script to prioritize
     * @param player The player context
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with execution result
     * 
     * –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     * 
     * @param script –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    default CompletableFuture<ExecutionResult> executeScriptCritical(CodeScript script, Player player, String trigger) {
        return executeScript(script, player, AdvancedExecutionEngine.ExecutionMode.SYNCHRONOUS, 
                           AdvancedExecutionEngine.Priority.CRITICAL, trigger);
    }
    
    /**
     * Execute script asynchronously for non-critical operations
     * 
     * @param script The script to execute
     * @param player The player context
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with execution result
     * 
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –¥–ª—è –Ω–µ–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     * 
     * @param script –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    default CompletableFuture<ExecutionResult> executeScriptAsync(CodeScript script, Player player, String trigger) {
        return executeScript(script, player, AdvancedExecutionEngine.ExecutionMode.ASYNCHRONOUS, 
                           AdvancedExecutionEngine.Priority.NORMAL, trigger);
    }
    
    /**
     * Execute script with low priority for background operations
     * 
     * @param script The script to execute
     * @param player The player context
     * @param trigger The trigger that caused execution
     * @return CompletableFuture with execution result
     * 
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —Å –Ω–∏–∑–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     * 
     * @param script –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     * @param player –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞
     * @param trigger –¢—Ä–∏–≥–≥–µ—Ä, –≤—ã–∑–≤–∞–≤—à–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
     * @return CompletableFuture —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    default CompletableFuture<ExecutionResult> executeScriptBackground(CodeScript script, Player player, String trigger) {
        return executeScript(script, player, AdvancedExecutionEngine.ExecutionMode.ASYNCHRONOUS, 
                           AdvancedExecutionEngine.Priority.LOW, trigger);
    }
}