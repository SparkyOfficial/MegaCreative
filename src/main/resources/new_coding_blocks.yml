# Advanced Coding Blocks Configuration
# This is the "master plan" for all coding blocks in the system

# ============================================
# ADVANCED EVENT BLOCKS
# ============================================

onPlayerMove:
  material: DIAMOND_BLOCK
  type: "EVENT"
  displayName: "Player Movement"
  description: "Triggers when a player moves to a different block"
  category: "player_events"
  parameters:
    distance: { type: "NUMBER", slot: 0, description: "Minimum movement distance" }
    world: { type: "TEXT", slot: 1, description: "World name filter (optional)" }

onPlayerLevelUp:
  material: EMERALD_BLOCK
  type: "EVENT"
  displayName: "Player Level Up"
  description: "Triggers when a player gains experience levels"
  category: "player_events"
  parameters:
    min_level: { type: "NUMBER", slot: 0, description: "Minimum level reached" }

onServerTPS:
  material: REDSTONE_BLOCK
  type: "EVENT"
  displayName: "Server Performance"
  description: "Triggers based on server TPS performance"
  category: "server_events"
  parameters:
    tps_threshold: { type: "NUMBER", slot: 0, description: "TPS threshold (1-20)" }
    condition: { type: "TEXT", slot: 1, description: "above/below" }

# ============================================
# ADVANCED ACTION BLOCKS
# ============================================

playCustomSound:
  material: NOTE_BLOCK
  type: "ACTION"
  displayName: "Play Custom Sound"
  description: "Plays a custom sound with advanced options"
  category: "audio_actions"
  parameters:
    sound: { type: "TEXT", slot: 0, description: "Sound name (minecraft:block.note_block.harp)" }
    volume: { type: "NUMBER", slot: 1, description: "Volume (0.0-1.0)" }
    pitch: { type: "NUMBER", slot: 2, description: "Pitch (0.5-2.0)" }
    location: { type: "LOCATION", slot: 3, description: "Sound location" }

spawnParticleEffect:
  material: FIREWORK_ROCKET
  type: "ACTION"
  displayName: "Spawn Particle Effect"
  description: "Creates advanced particle effects"
  category: "visual_actions"
  parameters:
    particle: { type: "TEXT", slot: 0, description: "Particle type" }
    count: { type: "NUMBER", slot: 1, description: "Number of particles" }
    spread: { type: "NUMBER", slot: 2, description: "Spread radius" }
    speed: { type: "NUMBER", slot: 3, description: "Particle speed" }

sendActionBar:
  material: EXPERIENCE_BOTTLE
  type: "ACTION"
  displayName: "Send Action Bar"
  description: "Displays text in player's action bar"
  category: "communication_actions"
  parameters:
    message: { type: "TEXT", slot: 0, description: "Action bar message" }
    duration: { type: "NUMBER", slot: 1, description: "Display duration (ticks)" }

executeAsyncCommand:
  material: COMMAND_BLOCK
  type: "ACTION"
  displayName: "Execute Async Command"
  description: "Executes commands asynchronously to prevent lag"
  category: "system_actions"
  parameters:
    command: { type: "TEXT", slot: 0, description: "Command to execute" }
    delay: { type: "NUMBER", slot: 1, description: "Delay before execution (ticks)" }

# ============================================
# ADVANCED CONDITION BLOCKS
# ============================================

checkPlayerStats:
  material: PLAYER_HEAD
  type: "CONDITION"
  displayName: "Player Statistics"
  description: "Checks player statistics and achievements"
  category: "player_conditions"
  parameters:
    stat_type: { type: "TEXT", slot: 0, description: "Statistic type" }
    value: { type: "NUMBER", slot: 1, description: "Comparison value" }
    operator: { type: "TEXT", slot: 2, description: "Comparison operator (>=, <=, ==)" }

checkWorldWeather:
  material: CLOCK
  type: "CONDITION"
  displayName: "Weather Condition"
  description: "Checks current weather in world"
  category: "world_conditions"
  parameters:
    weather: { type: "TEXT", slot: 0, description: "clear/rain/thunder" }
    world: { type: "TEXT", slot: 1, description: "World name" }

checkPlayerInventory:
  material: CHEST
  type: "CONDITION"
  displayName: "Inventory Check"
  description: "Checks player inventory contents"
  category: "inventory_conditions"
  parameters:
    item: { type: "ITEM", slot: 0, description: "Item to check for" }
    amount: { type: "NUMBER", slot: 1, description: "Required amount" }
    check_type: { type: "TEXT", slot: 2, description: "has/missing/exact" }

checkServerOnline:
  material: COMPARATOR
  type: "CONDITION"
  displayName: "Server Player Count"
  description: "Checks number of online players"
  category: "server_conditions"
  parameters:
    count: { type: "NUMBER", slot: 0, description: "Player count threshold" }
    operator: { type: "TEXT", slot: 1, description: "Comparison operator" }

# ============================================
# CONTROL FLOW BLOCKS
# ============================================

asyncLoop:
  material: REPEATER
  type: "CONTROL"
  displayName: "Async Loop"
  description: "Executes contained blocks in a non-blocking loop"
  category: "control_flow"
  parameters:
    iterations: { type: "NUMBER", slot: 0, description: "Number of iterations (-1 for infinite)" }
    delay: { type: "NUMBER", slot: 1, description: "Delay between iterations (ticks)" }

conditionalBranch:
  material: COMPARATOR
  type: "CONTROL"
  displayName: "Advanced If-Else"
  description: "Multi-condition branching with else-if support"
  category: "control_flow"
  parameters:
    condition_count: { type: "NUMBER", slot: 0, description: "Number of conditions to check" }

timedExecution:
  material: CLOCK
  type: "CONTROL"
  displayName: "Timed Execution"
  description: "Executes blocks after a specified delay"
  category: "control_flow"
  parameters:
    delay: { type: "NUMBER", slot: 0, description: "Delay in seconds" }
    repeat: { type: "BOOLEAN", slot: 1, description: "Repeat execution" }

# ============================================
# FUNCTION BLOCKS
# ============================================

customFunction:
  material: ENDER_CHEST
  type: "FUNCTION"
  displayName: "Custom Function"
  description: "Defines a reusable function with parameters"
  category: "functions"
  parameters:
    function_name: { type: "TEXT", slot: 0, description: "Function identifier" }
    param_count: { type: "NUMBER", slot: 1, description: "Number of parameters" }

callFunction:
  material: ENDER_EYE
  type: "ACTION"
  displayName: "Call Function"
  description: "Calls a previously defined function"
  category: "functions"
  parameters:
    function_name: { type: "TEXT", slot: 0, description: "Function to call" }
    args: { type: "LIST", slot: 1, description: "Function arguments" }

# ============================================
# DATA MANIPULATION BLOCKS
# ============================================

createList:
  material: BOOK
  type: "ACTION"
  displayName: "Create List"
  description: "Creates a new list variable"
  category: "data_structures"
  parameters:
    list_name: { type: "TEXT", slot: 0, description: "List variable name" }
    initial_values: { type: "LIST", slot: 1, description: "Initial list contents" }

listOperation:
  material: WRITABLE_BOOK
  type: "ACTION"
  displayName: "List Operation"
  description: "Performs operations on list variables"
  category: "data_structures"
  parameters:
    list_name: { type: "TEXT", slot: 0, description: "Target list name" }
    operation: { type: "TEXT", slot: 1, description: "add/remove/get/set/size" }
    value: { type: "ANY", slot: 2, description: "Operation value" }
    index: { type: "NUMBER", slot: 3, description: "List index (for get/set)" }

createMap:
  material: MAP
  type: "ACTION"
  displayName: "Create Map"
  description: "Creates a new map (dictionary) variable"
  category: "data_structures"
  parameters:
    map_name: { type: "TEXT", slot: 0, description: "Map variable name" }

mapOperation:
  material: FILLED_MAP
  type: "ACTION"
  displayName: "Map Operation"
  description: "Performs operations on map variables"
  category: "data_structures"
  parameters:
    map_name: { type: "TEXT", slot: 0, description: "Target map name" }
    operation: { type: "TEXT", slot: 1, description: "put/get/remove/keys/values" }
    key: { type: "TEXT", slot: 2, description: "Map key" }
    value: { type: "ANY", slot: 3, description: "Map value (for put)" }

# ============================================
# INTEGRATION BLOCKS
# ============================================

worldGuardRegionCheck:
  material: SHIELD
  type: "CONDITION"
  displayName: "WorldGuard Region"
  description: "Checks if player is in a WorldGuard region"
  category: "integration"
  parameters:
    region_name: { type: "TEXT", slot: 0, description: "Region identifier" }
    world: { type: "TEXT", slot: 1, description: "World name" }

economyTransaction:
  material: GOLD_INGOT
  type: "ACTION"
  displayName: "Economy Transaction"
  description: "Handles economy transactions (requires Vault)"
  category: "integration"
  parameters:
    operation: { type: "TEXT", slot: 0, description: "give/take/check" }
    amount: { type: "NUMBER", slot: 1, description: "Transaction amount" }
    target: { type: "PLAYER", slot: 2, description: "Target player" }

discordWebhook:
  material: PAPER
  type: "ACTION"
  displayName: "Discord Webhook"
  description: "Sends messages to Discord via webhook"
  category: "integration"
  parameters:
    webhook_url: { type: "TEXT", slot: 0, description: "Discord webhook URL" }
    message: { type: "TEXT", slot: 1, description: "Message to send" }
    username: { type: "TEXT", slot: 2, description: "Bot username" }

# ============================================
# DEBUGGING AND MONITORING BLOCKS
# ============================================

debugLog:
  material: REDSTONE_TORCH
  type: "ACTION"
  displayName: "Debug Log"
  description: "Logs debug information for script monitoring"
  category: "debugging"
  parameters:
    message: { type: "TEXT", slot: 0, description: "Debug message" }
    level: { type: "TEXT", slot: 1, description: "Log level (INFO/WARN/ERROR)" }

performanceMeasure:
  material: REDSTONE_COMPARATOR
  type: "CONTROL"
  displayName: "Performance Measure"
  description: "Measures execution time of contained blocks"
  category: "debugging"
  parameters:
    label: { type: "TEXT", slot: 0, description: "Performance measurement label" }

variableInspector:
  material: SPYGLASS
  type: "ACTION"
  displayName: "Variable Inspector"
  description: "Displays current variable values for debugging"
  category: "debugging"
  parameters:
    scope: { type: "TEXT", slot: 0, description: "Variable scope (local/world/player/server)" }
    filter: { type: "TEXT", slot: 1, description: "Variable name filter (optional)" }